%import common.CNAME
%import common.NEWLINE
%import common.INT
%import common.CPP_COMMENT

COMMENT: CPP_COMMENT NEWLINE
%ignore COMMENT

// ----

start: proposition+

proposition: proposition_expression "." NEWLINE

modal_operator: "it is obligatory that "i -> obligation_formulation
              | "it is prohibited that "i -> obligation_formulation_embedding_logical_negation
              | "it is necessary that "i  -> necessity_formulation
              | "it is impossible that "i -> necessity_formulation_embedding_logical_negation
              | "it is possible that "i   -> possibility_formulation
              | "it is permitted that "i  -> permissibility_formulation

quantification: "each "                                 -> universal_quantification
              | "some " | "at least one "               -> existential_quantification
              | "at least " INT " "                     -> at_least_n_quantification
              | "at most one "                          -> at_most_one_quantification
              | "at most " INT " "                      -> at_most_n_quantification
              | "exactly one "                          -> exactly_one_quantification
              | "exactly " INT " "                      -> exactly_n_quantification
              | "at least " INT " and at most " INT " " -> numeric_range_quantification
              | "more than one "                        -> at_least_n_quantification_with_n_2
              | "no "                                   -> logical_negation

proposition_expression: modal_operator proposition_expression                          -> modal_proposition
                      | "if "i proposition_expression "then " proposition_expression   -> implication_proposition
                      | "at " proposition_expression proposition_expression            -> at_proposition
                      | proposition_expression "is after " proposition_expression      -> after_proposition
                      | concept                                                        -> concept_proposition
                      | proposition_expression "only if " proposition_expression       -> conditional_proposition
                      | proposition_expression "and " proposition_expression           -> conjunction_proposition
                      | proposition_expression verb proposition_expression             -> simple_proposition
                      | proposition_expression "is " [negation] proposition_expression -> match_proposition

concept: concept "of " "the "? concept ["and " concept]  -> concept_of
       | concept "that " verb concept                    -> concept_that
       | _ARTICLE? [quantification] CNAME " "?

negation: "not "
_ARTICLE: "a " | "an " | "the "