%import common.CNAME
%import common.NEWLINE
%import common.INT
%import common.CPP_COMMENT

COMMENT: CPP_COMMENT NEWLINE
%ignore COMMENT

// ----

start: proposition+

proposition: proposition_expression "." NEWLINE

modal_operator: ("it is obligatory that "i | "it is necessary that "i | "it is permitted that "i)  -> positive_modal_operator
              | ("it is prohibited that "i | "it is impossible that "i | "it is not the case that "i) -> negative_modal_operator
              | ("it is possible that "i )  -> weak_modal_operator

quantification: "each "                                 -> universal_quantification
              | "some " | "at least one "               -> existential_quantification
              | "at least " INT " "                     -> at_least_n_quantification
              | "at most one "                          -> at_most_one_quantification
              | "at most " INT " "                      -> at_most_n_quantification
              | "exactly one "                          -> exactly_one_quantification
              | "exactly " INT " "                      -> exactly_n_quantification
              | "at least " INT " and at most " INT " " -> numeric_range_quantification
              | "more than one "                        -> at_least_n_quantification_with_n_2
              | "no "                                   -> logical_negation

proposition_expression: modal_operator proposition_expression                                   -> modal_proposition
                      | proposition_expression modal_verb verb proposition_expression           -> modal_verb_proposition
                      | proposition_expression "or " proposition_expression "but not both"      -> exclusive_disjunction
                      | proposition_expression "if and only if " proposition_expression         -> equivalence
                      | "not both " proposition_expression "and " proposition_expression        -> nand_formulation
                      | "neither " proposition_expression "nor " proposition_expression         -> nor_formulation
                      | "if "i proposition_expression "then " proposition_expression            -> implication_proposition
                      | "at "i proposition_expression proposition_expression                    -> at_proposition
                      | proposition_expression "is " [concept] "after " proposition_expression  -> after_proposition
                      | proposition_expression "is " [concept] "before " proposition_expression -> before_proposition
                      | concept                                                                 -> concept_proposition
                      | proposition_expression "only if " proposition_expression                -> conditional_proposition
                      | proposition_expression "and " proposition_expression                    -> conjunction_proposition
                      | proposition_expression "or " "is "? proposition_expression              -> disjunction_proposition
                      | proposition_expression [negation] verb proposition_expression           -> simple_proposition
                      | proposition_expression "is " temporal_value                             -> temporal_proposition
                      | proposition_expression "is " [negation] proposition_expression          -> match_proposition

!modal_verb: "must "
           | "always "
           | "must not "
           | "need not "
           | "always "
           | "never "
           | "can "
           | "may "


!temporal_value: "in the future" | "in the past"

concept: concept "of " "the "? concept ["and " concept]   -> concept_of
       | concept "that " verb concept                     -> concept_that
       | concept "that is " [negation] concept            -> concept_that_is
       | concept concept                                  -> concept_with_property
       | _ARTICLE? [quantification] concept_name [INT] " "?

negation: "not " | "does not " | "do not "
_ARTICLE: "a "i | "an "i | "the "i
concept_name: "conceptid" CNAME "#"