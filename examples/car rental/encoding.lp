:- rental(REN), #count{requested_car_group(REQCARGRO): has(rental(REN),requested_car_group(REQCARGRO))} != 1.
:- rental(REN), #count{rental_period(RENPER): includes(rental(REN),rental_period(RENPER))} != 1.
:- rental(REN), #count{return_branch(RETBRA): has(rental(REN),return_branch(RETBRA))} != 1.
:- scheduled_pick_up_date_time(SCHPICUPDATTIM), booking_date_time(BOODATTIM), SCHPICUPDATTIM <= BOODATTIM, advance_rental(ADVREN), has(advance_rental(ADVREN),scheduled_pick_up_date_time(SCHPICUPDATTIM)), rental_booking(RENBOO), has(rental_booking(RENBOO),booking_date_time(BOODATTIM)), advance_rental(ADVREN), establishes(rental_booking(RENBOO),advance_rental(ADVREN)).
:- rental(REN), open(OPE), REN = OPE, #count{credit_card(CRECAR): is_provisionally_charged_to(estimated_rental_charge(ESTRENCHA),credit_card(CRECAR)), estimated_rental_charge(ESTRENCHA), credit_card(CRECAR), renter(RENT), has(renter(RENT),credit_card(CRECAR)), rental(REN), is_responsible_for(renter(RENT),rental(REN))} < 1.
:- rental_charge(RENCHA), #count{business_currency(BUSCUR): is_calculated_in(rental_charge(RENCHA),business_currency(BUSCUR)), rental_charge(RENCHA), business_currency(BUSCUR), rental(REN), has(rental(REN),business_currency(BUSCUR))} < 1, rental(REN), has(rental(REN),rental_charge(RENCHA)).
:- renter(RENT), price_conversion(PRICON), requests(renter(RENT),price_conversion(PRICON)), rental(REN), has(rental(REN),renter(RENT)), #count{currency(CUR): is_converted_to(rental_charge(RENCHA),currency(CUR)), rental_charge(RENCHA), currency(CUR), price_conversion(PRICON), has(price_conversion(PRICON),currency(CUR))} < 1, rental(REN), has(rental(REN),rental_charge(RENCHA)).
:- cash_rental(CASREN), #count{lowest_rental_price(LOWRENPRI): honors(cash_rental(CASREN),lowest_rental_price(LOWRENPRI)), cash_rental(CASREN), lowest_rental_price(LOWRENPRI), cash_rental(CASREN), honors(cash_rental(CASREN),lowest_rental_price(LOWRENPRI))} < 1.
:- rental(REN), open(OPE), REN = OPE, driver(DRI), driver(DRI), DRI = DRI, rental(REN), has(rental(REN),driver(DRI)), barred(BAR), is(driver(DRI),barred(BAR)).
:- driver(DRI), not qualified(QUA), DRI = QUA, rental(REN), has(rental(REN),driver(DRI)).
:- country(COU), country_of_registration(COUOFREG), COU != COUOFREG, return_branch(RETBRA), has(return_branch(RETBRA),country(COU)), international_inward_rental(INTINWREN), has(international_inward_rental(INTINWREN),return_branch(RETBRA)), international_inward_rental(INTINWREN), rented_car(RENCAR), has(international_inward_rental(INTINWREN),rented_car(RENCAR)), has(rented_car(RENCAR),country_of_registration(COUOFREG)).
:- in_country_rental(INCOUREN), actual_return_date_time(ACTRETDATTIM), has(in_country_rental(INCOUREN),actual_return_date_time(ACTRETDATTIM)), #count{rented_car(RENCAR): owns(local_area(LOCARE),rented_car(RENCAR)), local_area(LOCARE), rented_car(RENCAR), in_country_rental(INCOUREN), has(in_country_rental(INCOUREN),rented_car(RENCAR))} < 1, in_country_rental(INCOUREN), return_branch(RETBRA), has(in_country_rental(INCOUREN),return_branch(RETBRA)), is_included_in(return_branch(RETBRA),local_area(LOCARE)).
:- rental(REN), open(OPE), REN = OPE, rental(REN), not international_inward_rental(INTINWREN), REN = INTINWREN, #count{local_area(LOCARE): is_owned_by(rented_car(RENCAR),local_area(LOCARE)), rented_car(RENCAR), local_area(LOCARE), international_inward_rental(INTINWREN), pick_up_branch(PICUPBRA), has(international_inward_rental(INTINWREN),pick_up_branch(PICUPBRA)), is_included_in(pick_up_branch(PICUPBRA),local_area(LOCARE))} < 1, international_inward_rental(INTINWREN), has(international_inward_rental(INTINWREN),rented_car(RENCAR)).
:- actual_return_date_time(ACTRETDATTIM), end_date_time(ENDDATTIM), ACTRETDATTIM > ENDDATTIM, rental(REN), has(rental(REN),actual_return_date_time(ACTRETDATTIM)), rental(REN), grace_period(GRAPER), has(rental(REN),grace_period(GRAPER)), has(grace_period(GRAPER),end_date_time(ENDDATTIM)), #count{late_return_charge(LATRETCHA): incurs(rental(REN),late_return_charge(LATRETCHA)), rental(REN), late_return_charge(LATRETCHA)} < 1.
:- drop_off_location(DROOFFLOC), eu_rent_site(EURENSIT), DROOFFLOC != EURENSIT, rental(REN), has(rental(REN),drop_off_location(DROOFFLOC)), rental(REN), return_branch(RETBRA), has(rental(REN),return_branch(RETBRA)), is_base_for(eu_rent_site(EURENSIT),return_branch(RETBRA)), #count{location_penalty_charge(LOCPENCHA): incurs(rental(REN),location_penalty_charge(LOCPENCHA)), rental(REN), location_penalty_charge(LOCPENCHA)} < 1.
:- rental(REN), assigned(ASS), REN = ASS, #count{pick_up_branch(PICUPBRA): is_stored_at(rented_car(RENCAR),pick_up_branch(PICUPBRA)), rented_car(RENCAR), pick_up_branch(PICUPBRA), rental(REN), has(rental(REN),pick_up_branch(PICUPBRA))} < 1, rental(REN), has(rental(REN),rented_car(RENCAR)).
:- rental(REN), actual_start_date_time(ACTSTADATTIM), has(rental(REN),actual_start_date_time(ACTSTADATTIM)), fuel_level(FUELEV), FUELEV != full, rental(REN), rented_car(RENCAR), has(rental(REN),rented_car(RENCAR)), has(rented_car(RENCAR),fuel_level(FUELEV)).
:- booking_date_time(BOODATTIM), scheduled_start_date_time(SCHSTADATTIM), BOODATTIM+5 >= SCHSTADATTIM, points_rental(POIREN), has(points_rental(POIREN),booking_date_time(BOODATTIM)), points_rental(POIREN), has(points_rental(POIREN),scheduled_start_date_time(SCHSTADATTIM)).
:- renter(RENT), not club_member(CLUMEM), RENT = CLUMEM, points_rental(POIREN), has(points_rental(POIREN),renter(RENT)).
:- start_date(STADAT), STADAT <= now, reserved_rental(RESREN), has(reserved_rental(RESREN),start_date(STADAT)).
:- rental_duration(RENDUR), RENDUR >= 90, rental(REN), has(rental(REN),rental_duration(RENDUR)).
:- rental(REN_1), rental(REN_2), REN_1 != REN_2, renter(RENT_1), renter(RENT_2), RENT_1 = RENT_2, rental(REN_1), has(rental(REN_1),renter(RENT_1)), rental(REN_2), has(rental(REN_2),renter(RENT_2)), rental_period(RENPER_1), rental_period(RENPER_2), overlap(rental_period(RENPER_1),rental_period(RENPER_2)), rental(REN_1), includes(rental(REN_1),rental_period(RENPER_1)), rental(REN_2), includes(rental(REN_2),rental_period(RENPER_2)).
:- rental_car(RENTCAR), #count{scheduled_service(SCHSER): has(rental_car(RENTCAR),scheduled_service(SCHSER)), rental_car(RENTCAR), scheduled_service(SCHSER)} < 1, in_need_of_service(INNEEOFSER), is(rental_car(RENTCAR),in_need_of_service(INNEEOFSER)).
:- service_reading(SERREA), SERREA >= 5500, rental_car(RENTCAR), has(rental_car(RENTCAR),service_reading(SERREA)).
:- rented_car(RENCAR), in_need_of_service(INNEEOFSER), RENCAR = INNEEOFSER, rental(REN), has(rental(REN),rented_car(RENCAR)), open(OPE), is(rental(REN),open(OPE)), #count{car_exchange_during_rental(CAREXCDURREN): incurs(rental(REN),car_exchange_during_rental(CAREXCDURREN)), rental(REN), car_exchange_during_rental(CAREXCDURREN)} < 1.
:- car_transfer(CARTRA), transfer_drop_off_date_time(TRADROOFFDATTIM), has(car_transfer(CARTRA),transfer_drop_off_date_time(TRADROOFFDATTIM)), #count{local_area(LOCARE): is_owned_by(transferred_car(TRACAR),local_area(LOCARE)), transferred_car(TRACAR), local_area(LOCARE), car_transfer(CARTRA), transfer_drop_off_branch(TRADROOFFBRA), has(car_transfer(CARTRA),transfer_drop_off_branch(TRADROOFFBRA)), includes(local_area(LOCARE),transfer_drop_off_branch(TRADROOFFBRA))} < 1, car_transfer(CARTRA), has(car_transfer(CARTRA),transferred_car(TRACAR)).
:- country(COU), country_of_registration(COUOFREG), COU != COUOFREG, transfer_drop_off_branch(TRADROOFFBRA), has(transfer_drop_off_branch(TRADROOFFBRA),country(COU)), international_return(INTRET), has(international_return(INTRET),transfer_drop_off_branch(TRADROOFFBRA)), international_return(INTRET), transferred_car(TRACAR), has(international_return(INTRET),transferred_car(TRACAR)), has(transferred_car(TRACAR),country_of_registration(COUOFREG)).
:- international_return(INTRET), transfer_drop_off_date_time(TRADROOFFDATTIM), has(international_return(INTRET),transfer_drop_off_date_time(TRADROOFFDATTIM)), #count{local_area(LOCARE): is_owned_by(transferred_car(TRACAR),local_area(LOCARE)), transferred_car(TRACAR), local_area(LOCARE), international_return(INTRET), transfer_drop_off_branch(TRADROOFFBRA), has(international_return(INTRET),transfer_drop_off_branch(TRADROOFFBRA)), includes(local_area(LOCARE),transfer_drop_off_branch(TRADROOFFBRA))} < 1, international_return(INTRET), has(international_return(INTRET),transferred_car(TRACAR)).
:- international_inward_rental(INTINWREN), actual_return_date_time(ACTRETDATTIM), has(international_inward_rental(INTINWREN),actual_return_date_time(ACTRETDATTIM)), #count{rented_car(RENCAR): owns(local_area(LOCARE),rented_car(RENCAR)), local_area(LOCARE), rented_car(RENCAR), international_inward_rental(INTINWREN), has(international_inward_rental(INTINWREN),rented_car(RENCAR))} < 1, international_inward_rental(INTINWREN), return_branch(RETBRA), has(international_inward_rental(INTINWREN),return_branch(RETBRA)), is_included_in(return_branch(RETBRA),local_area(LOCARE)).
:- rented_car(RENCAR), in_need_of_repair(INNEEOFREP), RENCAR = INNEEOFREP, rental(REN), has(rental(REN),rented_car(RENCAR)), open(OPE), is(rental(REN),open(OPE)), #count{car_exchange_during_rental(CAREXCDURREN): incurs(rental(REN),car_exchange_during_rental(CAREXCDURREN)), rental(REN), car_exchange_during_rental(CAREXCDURREN)} < 1.
